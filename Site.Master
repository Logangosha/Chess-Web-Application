<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" CodeFile="~/Site.Master.cs" Inherits="Chess_App.SiteMaster" %>

<!DOCTYPE html>
<html lang="en">
<head runat="server">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Respect</title>
    <link rel="icon" type="image/x-icon" href="/Images/2by2icon.png" />
    <link rel="stylesheet" href="StyleSheets/Style.css" />
    <%-- FONTS --%>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Exo+2:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Genos:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=IBM+Plex+Serif:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Krub|IM-Fell-English" rel="stylesheet">
    <script src="https://kit.fontawesome.com/a74cbb3bcd.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://ajax.aspnetcdn.com/ajax/4.0/1/WebForms.js"></script>
</head>
<body id="PageBody" runat="server" class="theme Custom-Styles overflow-hidden hidden-scroll-bar">
    <form runat="server">
         <asp:ScriptManager runat="server">
            <Scripts>
                <%--Framework Scripts--%>
                <asp:ScriptReference Name="WebForms.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebForms.js" />
                <asp:ScriptReference Name="WebFormsBundle" />
                <%--Site Scripts--%>
            </Scripts>
        </asp:ScriptManager>
        <div class="container-fluid MainCard p-0 m-0 h-100 overflow-auto hidden-scroll-bar">
            <asp:ContentPlaceHolder ID="MainContent" runat="server">
            </asp:ContentPlaceHolder>
            <footer>
            </footer>
        </div>
    </form>
    <script type="text/javascript" src="Scripts/Script.js"></script>
    <script>
        document.addEventListener("keydown", function (event) {
            if (event.keyCode === 13) { // Check if the key code is for the Enter key (key code 13)
                event.preventDefault(); // Prevent the default behavior of the Enter key (i.e., prevent form submission)
            }
        });

        function onPageLoad() {
            // Set initial time to 15 minutes (900,000 milliseconds)
            var initialTime = 14 * 60 * 1000;  // 15 minutes in milliseconds

            // Function to be triggered when time is up
            function handleTimeUp() {
                console.log("14 minutes have passed!");
                // Add your action after 15 minutes here
                __doPostBack('customPostBackControl', null);
            }

            // Set a timer for 15 minutes
            var timer = setTimeout(function () {
                handleTimeUp();
            }, initialTime);

            // Reset the timer when mouse is moved
            window.addEventListener('mousemove', resetTimer);

            // Reset the timer when a key is pressed
            window.addEventListener('keydown', resetTimer);

            // Reset the timer when a mouse click occurs
            window.addEventListener('click', resetTimer);

            function resetTimer() {
                clearTimeout(timer);
                <% SetRemainingSessionTime(); %>
                //console.log("timer reset");
                timer = setTimeout(function () {
                    handleTimeUp();
                }, initialTime);
            }
        }

        // Trigger the function when the page has finished loading
        //window.onload = onPageLoad;
        $(document).ready(function () {
            window.addEventListener('load', function (event) {
                onPageLoad();
            });
        });
        <%--$(document).ready(function () {
            window.addEventListener('unload', function (event) {
                event.preventDefault();
                let isSignedIn = <%= ((Session["AccountInfo"] != null) && (Session["AccountInfo"] is Chess_App.PlayerAccount)).ToString().ToLower() %>;
                if (isSignedIn) {
                       <% UserLeavesPage(); %>
                }
            });
       });--%>



        <%
        // Get the AccountInfo from the Session
        var accountInfo = Session["AccountInfo"] as Chess_App.PlayerAccount;

        // Set the default colors in case the theme values are null or empty
        //var statusColor = "#3B3B3B";
        //var primaryColor = "#FFFFFF";
        //var backgroundColor = "#000000";
        var statusColor = accountInfo?.Theme?.StatusColor;
        var primaryColor = accountInfo?.Theme?.PrimaryColor;
        var backgroundColor = accountInfo?.Theme?.BackgroundColor;

        // Fallback colors in case the values are null or empty
        var defaultStatusColor = "#3B3B3B";
        var defaultPrimaryColor = "#FFFFFF";
        var defaultBackgroundColor = "#000000";

        // Use the theme colors if available, otherwise use the fallback colors
        statusColor = !String.IsNullOrEmpty(statusColor) ? statusColor : defaultStatusColor;
        primaryColor = !String.IsNullOrEmpty(primaryColor) ? primaryColor : defaultPrimaryColor;
        backgroundColor = !String.IsNullOrEmpty(backgroundColor) ? backgroundColor : defaultBackgroundColor;
    %>

        root.style.setProperty('--status-color', '<%= statusColor %>');
        root.style.setProperty('--primary-color', '<%= primaryColor %>');
        root.style.setProperty('--background-color', '<%= backgroundColor %>');

    </script>
</body>
</html>
